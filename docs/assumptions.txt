Objective:
Design and implement a Python-based automated reporting system that:
●  Runs every Monday at 6 AM (automatically scheduled).
●  Extracts the number of students who failed in tests over the last week.
    COUNT failures

●  Categorizes failures by:
    ○  Standard (grade level)
    ○  Subject
    ○  Comparison with the student’s previous test’s percentage (to track  improvement/decline)

●  Generates a summary using an LLM.
●  Sends the report via email.

Assumptions:
Standards - 8, 9, 10
Subjects - Currently 4 => Maths, Science, History, Geography
types of exams - Single (Unit Test) or (Topic wise tests)
Archival strategy -> As we want to track the latest performance of the student,
same exams are conducted across different Standards -> if Maths exam is there it will be conducted across differnet Standards
Exams are not predefined and we will have the data

queries:
Is there only one type of exam or are there any types of exams, Currently I have taken only one type of exam with 33 as passing marks.
So when we want to Categorizes failures by Standard/ Subjects we just have to know the count of failures for different Standards right?
For Comparison, do we have to just check with previous week or have to follow the trend over some duration?

To tackle the scalability
    - Partition the data and Indexing based on Time/ Standard/ May be Subject
    - Partition for date that is Archival Status and VIEW for Standard or Subject
    -   isssue => Error Code: 1506. Foreign keys are not yet supported in conjunction with partitioning
